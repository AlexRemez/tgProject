from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from db.models import Coaches, Students


def coach_services() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text="üë•–ú–æ–∏ —É—á–µ–Ω–∏–∫–∏üë•", callback_data="my_students"),
        InlineKeyboardButton(text="üÜï–î–æ–±–∞–≤–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µüÜï", callback_data="add_exercise")
    )
    kb.row(InlineKeyboardButton(text="üóí–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—áüóí", callback_data="tasks"))
    return kb.as_markup(resize_keyboard=True)


async def student_list_kb(coach: Coaches) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    students = await Students.filter(coach_id=coach.id)
    for student in students:
        student: Students
        kb.add(InlineKeyboardButton(text=f"{student.first_name}", callback_data="#" + str(student.id)))
    kb.adjust(4)
    kb.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup(resize_keyboard=True)


def tasks_list_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text="–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏", callback_data="completed_tasks"))
    kb.row(InlineKeyboardButton(text="–í –ø—Ä–æ—Ü–µ—Å—Å–µ", callback_data="process_tasks"),
           InlineKeyboardButton(text="–û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", callback_data="waiting_confirm"))
    kb.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup(resize_keyboard=True)


def waiting_confirm_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="more"))
    kb.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup(resize_keyboard=True)


def back() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup(resize_keyboard=True)